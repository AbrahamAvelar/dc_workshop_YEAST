conda activate metagenomics

curl -O ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR258/004/SRR2589044/SRR2589044_1.fastq.gz
# # Esto tarda. convendrá hacer un subsample de los fastq.gz
# primero download scp javelar@dna.lavis.unam.mx:/mnt/Timina/lmorales/Public/ymez/data/fastq/raw/*5645* .
# luego upload dándole click


gunzip *fastq.gz 
head YMX005645_R1.fastq
#Selecciona la información de la última lectura del archivo

fastqc *.fastq*

# Ver HTMLs
unzip *.zip # no funciona porque unzip no acepta listas, necesita de a uno por uno

$ for filename in *.zip
> do
> unzip $filename
> done

trimmomatic PE -threads 4 YMX005645_R1.fastq YMX005645_R2.fastq  YMX005645_R1.trimmed.fastq YMX005645_R1un.trimmed.fastq YMX005645_R2.trimmed.fastq YMX005645_R2un.trimmed.fastq SLIDINGWINDOW:4:20

trimmomatic SE -threads 4 YMX005645_R1.fastq  YMX005645_R1.fastq.trimmed.fastq.gz SLIDINGWINDOW:4:20 ILLUMINACLIP:SRR_adapters.fa # si fuera single end #Otra vez, esto tarda.
trimmomatic PE -threads 4 YMX005645_R1.fastq YMX005645_R2.fastq  YMX005645_R1.trimmed.fastq YMX005645_R1un.trimmed.fastq YMX005645_R2.trimmed.fastq YMX005645_R2un.trimmed.fastq SLIDINGWINDOW:4:20 MINLEN:100 LEADING:5 TRAILING:5

trimmomatic PE -threads 4 YMX005645_R1.fastq YMX005645_R2.fastq  \
              SRR_1056_1.trimmed.fastq SRR_1056_1un.trimmed.fastq \
              SRR_1056_2.trimmed.fastq SRR_1056_2un.trimmed.fastq \
               SLIDINGWINDOW:4:20 # ILLUMINACLIP:SRR_adapters.fa tendría que buscar/pedir el archivo de adaptadores de bgi


for infile in *_1.fastq.gz
do
>   base=$(basename ${infile} _1.fastq.gz)
>   trimmomatic PE ${infile} ${base}_2.fastq.gz \
>                ${base}_1.trim.fastq.gz ${base}_1un.trim.fastq.gz \
>                ${base}_2.trim.fastq.gz ${base}_2un.trim.fastq.gz \
>                SLIDINGWINDOW:4:20 MINLEN:25 
> done

mkdir ref_genome
mv SACE_S288C_v1_allChr.fasta ref_genome/
cd ref_genome/

less SACE_S288C_v1_allChr.fasta
wc SACE_S288C_v1_allChr.fasta
cd ..

mkdir -p results/sam results/bam results/bcf results/vcf

bwa index ref_genome/SACE_S288C_v1_allChr.fasta 
bwa mem ref_genome/SACE_S288C_v1_allChr.fasta untrimmed_fastq/YMX005645_R1.trimmed.fastq untrimmed_fastq/YMX005645_R2.trimmed.fastq > output.sam

# hacer más pequeño el sam para que no de errores. Noté que el error que daba cambiaba la línea en la cuál daba el error. En algún blog vi que la compu podría ser limitante.
head -n20 results/sam/output.sam > output_header.sam 
shuf -n 100000 results/sam/output.sam | head -n 100000 > output_random.sam # 10k rápido. 100k unos segundos.
cat output_random.sam >> output_header.sam

samtools view -S -b output_header.sam > results/bam/output.bam #
samtools sort -o results/bam/output.sorted.bam results/bam/output.bam 
samtools flagstat results/bam/output.sorted.bam
bcftools mpileup -O b -o results/bcf/output_raw.bcf -f ref_genome/SACE_S288C_v1_allChr.fasta results/bam/output.sorted.bam # 100k tarda un poco

bcftools call --ploidy 2 -m -v -o results/vcf/output_variants.vcf results/bcf/output_raw.bcf  #Detect SNVs
vcfutils.pl varFilter results/vcf/output_variants.vcf  > results/vcf/output_final_variants.vcf # Filter and report the SNV variants in variant calling format (VCF
samtools index results/bam/output.sorted.bam
samtools tview results/bam/output.sorted.bam ref_genome/SACE_S288C_v1_allChr.fasta

### generar multi-vcf file

head -n268 /home/alumno1/dc_workshop_YEAST/data/trimmed_fastq_small/YMX005645_R
